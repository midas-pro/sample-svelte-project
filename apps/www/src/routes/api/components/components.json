[
  {
    "component": "accordion",
    "name": "Accordion",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "Accordion.svelte",
        "dir": "accordion",
        "content": "<script lang=\"ts\">\n\timport { Accordion as AccordionPrimitive } from \"radix-svelte\";\n\n\t// Remove the any when radix-svelte is updated to properly satisfy the types\n\t// https://www.radix-svelte.com/docs/accordion\n\texport let value: any = undefined;\n</script>\n\n<AccordionPrimitive.Root bind:value {...$$restProps}>\n\t<slot />\n</AccordionPrimitive.Root>\n"
      },
      {
        "name": "AccordionContent.svelte",
        "dir": "accordion",
        "content": "<script lang=\"ts\">\n\timport type { AccordionContentProps } from \"radix-svelte\";\n\timport { Accordion as AccordionPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let transition: AccordionContentProps[\"transition\"] = true;\n</script>\n\n<AccordionPrimitive.Content\n\tclass={cn(\"overflow-hidden text-sm\", className)}\n\t{...$$restProps}\n\t{transition}\n>\n\t<div class=\"pb-4 pt-0\">\n\t\t<slot />\n\t</div>\n</AccordionPrimitive.Content>\n"
      },
      {
        "name": "AccordionItem.svelte",
        "dir": "accordion",
        "content": "<script lang=\"ts\">\n\timport type { AccordionItemProps } from \"radix-svelte\";\n\timport { Accordion as AccordionPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let value: AccordionItemProps[\"value\"];\n</script>\n\n<AccordionPrimitive.Item\n\t{value}\n\tclass={cn(\"border-b\", className)}\n\t{...$$restProps}\n>\n\t<slot />\n</AccordionPrimitive.Item>\n"
      },
      {
        "name": "AccordionTrigger.svelte",
        "dir": "accordion",
        "content": "<script lang=\"ts\">\n\timport { ChevronDown } from \"lucide-svelte\";\n\timport { Accordion as AccordionPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<AccordionPrimitive.Header class=\"flex\">\n\t<AccordionPrimitive.Trigger\n\t\tclass={cn(\n\t\t\t\"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n\t\t\tclassName\n\t\t)}\n\t\t{...$$restProps}\n\t>\n\t\t<slot />\n\t\t<ChevronDown class=\"h-4 w-4 transition-transform duration-200\" />\n\t</AccordionPrimitive.Trigger>\n</AccordionPrimitive.Header>\n"
      },
      {
        "name": "index.ts",
        "dir": "accordion",
        "content": "export { default as Accordion } from \"./Accordion.svelte\";\nexport { default as AccordionContent } from \"./AccordionContent.svelte\";\nexport { default as AccordionItem } from \"./AccordionItem.svelte\";\nexport { default as AccordionTrigger } from \"./AccordionTrigger.svelte\";\n"
      }
    ]
  },
  {
    "component": "alert",
    "name": "Alert",
    "files": [
      {
        "name": "Alert.svelte",
        "dir": "alert",
        "content": "<script lang=\"ts\">\n\timport type { VariantProps } from \"class-variance-authority\";\n\timport { cva } from \"class-variance-authority\";\n\timport { cn } from \"$lib/utils\";\n\n\tconst alertVariants = cva(\n\t\t\"relative w-full rounded-lg border p-4 [&>svg]:absolute [&>svg]:text-foreground [&>svg]:left-4 [&>svg]:top-4 [&>svg+div]:translate-y-[-3px] [&:has(svg)]:pl-11\",\n\t\t{\n\t\t\tvariants: {\n\t\t\t\tvariant: {\n\t\t\t\t\tdefault: \"bg-background text-foreground\",\n\t\t\t\t\tdestructive:\n\t\t\t\t\t\t\"text-destructive border-destructive/50 dark:border-destructive [&>svg]:text-destructive text-destructive\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefaultVariants: {\n\t\t\t\tvariant: \"default\"\n\t\t\t}\n\t\t}\n\t);\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let variant: VariantProps<typeof alertVariants>[\"variant\"] =\n\t\t\"default\";\n</script>\n\n<div class={cn(alertVariants({ variant }), className)} {...$$restProps}>\n\t<slot />\n</div>\n"
      },
      {
        "name": "AlertDescription.svelte",
        "dir": "alert",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<div class={cn(\"text-sm [&_p]:leading-relaxed\", className)} {...$$restProps}>\n\t<slot />\n</div>\n"
      },
      {
        "name": "AlertTitle.svelte",
        "dir": "alert",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let level: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" = \"h5\";\n</script>\n\n<svelte:element\n\tthis={level}\n\tclass={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n\t{...$$restProps}\n>\n\t<slot />\n</svelte:element>\n"
      },
      {
        "name": "index.ts",
        "dir": "alert",
        "content": "export { default as Alert } from \"./Alert.svelte\";\nexport { default as AlertDescription } from \"./AlertDescription.svelte\";\nexport { default as AlertTitle } from \"./AlertTitle.svelte\";\n"
      }
    ]
  },
  {
    "component": "alert-dialog",
    "name": "Alert Dialog",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "AlertDialogAction.svelte",
        "dir": "alert-dialog",
        "content": "<script lang=\"ts\">\n\timport { AlertDialog as AlertDialogPrimitive } from \"radix-svelte\";\n\timport { buttonVariants } from \"$components/ui/button\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<AlertDialogPrimitive.Action\n\tclass={cn(buttonVariants(), className)}\n\t{...$$restProps}\n>\n\t<slot />\n</AlertDialogPrimitive.Action>\n"
      },
      {
        "name": "AlertDialogCancel.svelte",
        "dir": "alert-dialog",
        "content": "<script lang=\"ts\">\n\timport { AlertDialog as AlertDialogPrimitive } from \"radix-svelte\";\n\timport { buttonVariants } from \"$components/ui/button\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<AlertDialogPrimitive.Cancel\n\tclass={cn(\n\t\tbuttonVariants({ variant: \"outline\" }),\n\t\t\"mt-2 sm:mt-0\",\n\t\tclassName\n\t)}\n\t{...$$restProps}\n>\n\t<slot />\n</AlertDialogPrimitive.Cancel>\n"
      },
      {
        "name": "AlertDialogContent.svelte",
        "dir": "alert-dialog",
        "content": "<script lang=\"ts\">\n\timport { AlertDialog as AlertDialogPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\timport AlertDialogOverlay from \"./AlertDialogOverlay.svelte\";\n\timport AlertDialogPortal from \"./AlertDialogPortal.svelte\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<AlertDialogPortal>\n\t<AlertDialogOverlay />\n\t<AlertDialogPrimitive.Content\n\t\tclass={cn(\n\t\t\t\"fixed z-50 grid w-full max-w-lg scale-100 gap-4 border bg-background p-6 opacity-100 shadow-lg animate-in fade-in-90 slide-in-from-bottom-10 sm:rounded-lg sm:zoom-in-90 sm:slide-in-from-bottom-0 md:w-full\",\n\t\t\tclassName\n\t\t)}\n\t\t{...$$restProps}\n\t>\n\t\t<slot />\n\t</AlertDialogPrimitive.Content>\n</AlertDialogPortal>\n"
      },
      {
        "name": "AlertDialogDescription.svelte",
        "dir": "alert-dialog",
        "content": "<script lang=\"ts\">\n\timport { AlertDialog as AlertDialogPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<AlertDialogPrimitive.Description\n\tclass={cn(\"text-sm text-muted-foreground\", className)}\n\t{...$$restProps}\n>\n\t<slot />\n</AlertDialogPrimitive.Description>\n"
      },
      {
        "name": "AlertDialogFooter.svelte",
        "dir": "alert-dialog",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<div\n\tclass={cn(\n\t\t\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n\t\tclassName\n\t)}\n\t{...$$restProps}\n>\n\t<slot />\n</div>\n"
      },
      {
        "name": "AlertDialogHeader.svelte",
        "dir": "alert-dialog",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<div\n\tclass={cn(\"flex flex-col space-y-2 text-center sm:text-left\", className)}\n\t{...$$restProps}\n>\n\t<slot />\n</div>\n"
      },
      {
        "name": "AlertDialogOverlay.svelte",
        "dir": "alert-dialog",
        "content": "<script lang=\"ts\">\n\timport { AlertDialog as AlertDialogPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<AlertDialogPrimitive.Overlay\n\tclass={cn(\n\t\t\"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm transition-opacity animate-in fade-in\",\n\t\tclassName\n\t)}\n\t{...$$restProps}\n/>\n"
      },
      {
        "name": "AlertDialogPortal.svelte",
        "dir": "alert-dialog",
        "content": "<script lang=\"ts\">\n\timport { AlertDialog as AlertDialogPrimitive } from \"radix-svelte\";\n</script>\n\n<AlertDialogPrimitive.Portal {...$$restProps}>\n\t<div\n\t\tclass=\"fixed inset-0 z-50 flex items-end justify-center sm:items-center\"\n\t>\n\t\t<slot />\n\t</div>\n</AlertDialogPrimitive.Portal>\n"
      },
      {
        "name": "AlertDialogTitle.svelte",
        "dir": "alert-dialog",
        "content": "<script lang=\"ts\">\n\timport { AlertDialog as AlertDialogPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<AlertDialogPrimitive.Title\n\tclass={cn(\"text-lg font-semibold\", className)}\n\t{...$$restProps}\n>\n\t<slot />\n</AlertDialogPrimitive.Title>\n"
      },
      {
        "name": "index.ts",
        "dir": "alert-dialog",
        "content": "import { AlertDialog as AlertDialogPrimitive } from \"radix-svelte\";\n\nexport { default as AlertDialogAction } from \"./AlertDialogAction.svelte\";\nexport { default as AlertDialogCancel } from \"./AlertDialogCancel.svelte\";\nexport { default as AlertDialogContent } from \"./AlertDialogContent.svelte\";\nexport { default as AlertDialogDescription } from \"./AlertDialogDescription.svelte\";\nexport { default as AlertDialogFooter } from \"./AlertDialogFooter.svelte\";\nexport { default as AlertDialogHeader } from \"./AlertDialogHeader.svelte\";\nexport { default as AlertDialogTitle } from \"./AlertDialogTitle.svelte\";\n\nexport const AlertDialog = AlertDialogPrimitive.Root;\nexport const AlertDialogTrigger = AlertDialogPrimitive.Trigger;\n"
      }
    ]
  },
  {
    "component": "aspect-ratio",
    "name": "Aspect Ratio",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "AspectRatio.svelte",
        "dir": "aspect-ratio",
        "content": "<script lang=\"ts\">\n\timport type { AspectRatioProps } from \"radix-svelte\";\n\timport { AspectRatio } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let ratio: AspectRatioProps[\"ratio\"] = 16 / 9;\n</script>\n\n<AspectRatio.Root {ratio} class={cn(className)} {...$$restProps}>\n\t<slot />\n</AspectRatio.Root>\n"
      },
      {
        "name": "index.ts",
        "dir": "aspect-ratio",
        "content": "export { default as AspectRatio } from \"./AspectRatio.svelte\";\n"
      }
    ]
  },
  {
    "component": "avatar",
    "name": "Avatar",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "Avatar.svelte",
        "dir": "avatar",
        "content": "<script lang=\"ts\">\n\timport { Avatar as AvatarPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<AvatarPrimitive.Root\n\tclass={cn(\n\t\t\"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n\t\tclassName\n\t)}\n\t{...$$restProps}\n>\n\t<slot />\n</AvatarPrimitive.Root>\n"
      },
      {
        "name": "AvatarFallback.svelte",
        "dir": "avatar",
        "content": "<script lang=\"ts\">\n\timport { Avatar as AvatarPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<AvatarPrimitive.Fallback\n\tclass={cn(\n\t\t\"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n\t\tclassName\n\t)}\n\t{...$$restProps}\n>\n\t<slot />\n</AvatarPrimitive.Fallback>\n"
      },
      {
        "name": "AvatarImage.svelte",
        "dir": "avatar",
        "content": "<script lang=\"ts\">\n\timport type { AvatarImageProps } from \"radix-svelte\";\n\timport { Avatar as AvatarPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport let src: AvatarImageProps[\"src\"] = undefined;\n\texport let alt: AvatarImageProps[\"alt\"] = undefined;\n\texport { className as class };\n</script>\n\n<AvatarPrimitive.Image\n\t{alt}\n\t{src}\n\tclass={cn(\"aspect-square h-full w-full\", className)}\n\t{...$$restProps}\n/>\n"
      },
      {
        "name": "index.ts",
        "dir": "avatar",
        "content": "export { default as Avatar } from \"./Avatar.svelte\";\nexport { default as AvatarFallback } from \"./AvatarFallback.svelte\";\nexport { default as AvatarImage } from \"./AvatarImage.svelte\";\n"
      }
    ]
  },
  {
    "component": "badge",
    "name": "Badge",
    "files": [
      {
        "name": "Badge.svelte",
        "dir": "badge",
        "content": "<script lang=\"ts\">\n\timport type { VariantProps } from \"class-variance-authority\";\n\timport type { HTMLAnchorAttributes } from \"svelte/elements\";\n\timport { cva } from \"class-variance-authority\";\n\timport { cn } from \"$lib/utils\";\n\n\tconst badgeVariants = cva(\n\t\t\"inline-flex items-center border rounded-full px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n\t\t{\n\t\t\tvariants: {\n\t\t\t\tvariant: {\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t\"bg-primary hover:bg-primary/80 border-transparent text-primary-foreground\",\n\t\t\t\t\tsecondary:\n\t\t\t\t\t\t\"bg-secondary hover:bg-secondary/80 border-transparent text-secondary-foreground\",\n\t\t\t\t\tdestructive:\n\t\t\t\t\t\t\"bg-destructive hover:bg-destructive/80 border-transparent text-destructive-foreground\",\n\t\t\t\t\toutline: \"text-foreground\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefaultVariants: {\n\t\t\t\tvariant: \"default\"\n\t\t\t}\n\t\t}\n\t);\n\n\texport let href: HTMLAnchorAttributes[\"href\"] = undefined;\n\texport let variant: VariantProps<typeof badgeVariants>[\"variant\"] =\n\t\t\"default\";\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<svelte:element\n\tthis={href ? \"a\" : \"span\"}\n\t{href}\n\tclass={cn(badgeVariants({ variant, className }))}\n\t{...$$restProps}\n>\n\t<slot />\n</svelte:element>\n"
      },
      {
        "name": "index.ts",
        "dir": "badge",
        "content": "import { cva } from \"class-variance-authority\";\n\nexport { default as Badge } from \"./Badge.svelte\";\nexport const badgeVariants = cva(\n\t\"inline-flex items-center border rounded-full px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault:\n\t\t\t\t\t\"bg-primary hover:bg-primary/80 border-transparent text-primary-foreground\",\n\t\t\t\tsecondary:\n\t\t\t\t\t\"bg-secondary hover:bg-secondary/80 border-transparent text-secondary-foreground\",\n\t\t\t\tdestructive:\n\t\t\t\t\t\"bg-destructive hover:bg-destructive/80 border-transparent text-destructive-foreground\",\n\t\t\t\toutline: \"text-foreground\"\n\t\t\t}\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: \"default\"\n\t\t}\n\t}\n);\n"
      }
    ]
  },
  {
    "component": "button",
    "name": "Button",
    "files": [
      {
        "name": "Button.svelte",
        "dir": "button",
        "content": "<script lang=\"ts\">\n\timport type { VariantProps } from \"class-variance-authority\";\n\timport type {\n\t\tHTMLAnchorAttributes,\n\t\tHTMLButtonAttributes\n\t} from \"svelte/elements\";\n\timport { cn } from \"$lib/utils\";\n\timport { buttonVariants } from \".\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let href: HTMLAnchorAttributes[\"href\"] = undefined;\n\texport let type: HTMLButtonAttributes[\"type\"] = undefined;\n\texport let variant: VariantProps<typeof buttonVariants>[\"variant\"] =\n\t\t\"default\";\n\texport let size: VariantProps<typeof buttonVariants>[\"size\"] = \"default\";\n</script>\n\n<svelte:element\n\tthis={href ? \"a\" : \"button\"}\n\ttype={href ? undefined : type}\n\t{href}\n\tclass={cn(buttonVariants({ variant, size, className }))}\n\t{...$$restProps}\n\ton:click\n\ton:change\n\ton:keydown\n\ton:keyup\n\ton:mouseenter\n\ton:mouseleave\n>\n\t<slot />\n</svelte:element>\n"
      },
      {
        "name": "index.ts",
        "dir": "button",
        "content": "import { cva } from \"class-variance-authority\";\n\nexport { default as Button } from \"./Button.svelte\";\n\nexport const buttonVariants = cva(\n\t\"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background\",\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault:\n\t\t\t\t\t\"bg-primary text-primary-foreground hover:bg-primary/90\",\n\t\t\t\tdestructive:\n\t\t\t\t\t\"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n\t\t\t\toutline:\n\t\t\t\t\t\"border border-input hover:bg-accent hover:text-accent-foreground\",\n\t\t\t\tsecondary:\n\t\t\t\t\t\"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n\t\t\t\tghost: \"hover:bg-accent hover:text-accent-foreground\",\n\t\t\t\tlink: \"underline-offset-4 hover:underline text-primary\"\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: \"h-10 py-2 px-4\",\n\t\t\t\tsm: \"h-9 px-3 rounded-md\",\n\t\t\t\tlg: \"h-11 px-8 rounded-md\"\n\t\t\t}\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: \"default\",\n\t\t\tsize: \"default\"\n\t\t}\n\t}\n);\n"
      }
    ]
  },
  {
    "component": "card",
    "name": "Card",
    "files": [
      {
        "name": "Card.svelte",
        "dir": "card",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<div\n\tclass={cn(\n\t\t\"rounded-lg border bg-card text-card-foreground shadow-sm\",\n\t\tclassName\n\t)}\n\t{...$$restProps}\n\ton:click\n\ton:focusin\n\ton:focusout\n\ton:mouseenter\n\ton:mouseleave\n>\n\t<slot />\n</div>\n"
      },
      {
        "name": "CardContent.svelte",
        "dir": "card",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<div class={cn(\"p-6 pt-0\", className)} {...$$restProps}>\n\t<slot />\n</div>\n"
      },
      {
        "name": "CardDescription.svelte",
        "dir": "card",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<p class={cn(\"text-sm text-muted-foreground\", className)} {...$$restProps}>\n\t<slot />\n</p>\n"
      },
      {
        "name": "CardFooter.svelte",
        "dir": "card",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<div class={cn(\"flex items-center p-6 pt-0\", className)} {...$$restProps}>\n\t<slot />\n</div>\n"
      },
      {
        "name": "CardHeader.svelte",
        "dir": "card",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<div class={cn(\"flex flex-col space-y-1.5 p-6\", className)} {...$$restProps}>\n\t<slot />\n</div>\n"
      },
      {
        "name": "CardTitle.svelte",
        "dir": "card",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\n\texport let tag: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" = \"h3\";\n</script>\n\n<svelte:element\n\tthis={tag}\n\tclass={cn(\"text-lg font-semibold leading-none tracking-tight\", className)}\n\t{...$$restProps}\n>\n\t<slot />\n</svelte:element>\n"
      },
      {
        "name": "index.ts",
        "dir": "card",
        "content": "export { default as Card } from \"./Card.svelte\";\nexport { default as CardContent } from \"./CardContent.svelte\";\nexport { default as CardDescription } from \"./CardDescription.svelte\";\nexport { default as CardFooter } from \"./CardFooter.svelte\";\nexport { default as CardHeader } from \"./CardHeader.svelte\";\nexport { default as CardTitle } from \"./CardTitle.svelte\";\n"
      }
    ]
  },
  {
    "component": "checkbox",
    "name": "Checkbox",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "Checkbox.svelte",
        "dir": "checkbox",
        "content": "<script lang=\"ts\">\n\timport type { CheckboxRootProps } from \"radix-svelte\";\n\timport { Check } from \"lucide-svelte\";\n\timport { Checkbox as CheckboxPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let checked: CheckboxRootProps[\"checked\"] = undefined;\n</script>\n\n<CheckboxPrimitive.Root\n\tclass={cn(\n\t\t\"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n\t\tclassName\n\t)}\n\tbind:checked\n\t{...$$restProps}\n>\n\t<CheckboxPrimitive.Indicator\n\t\tclass={cn(\"flex items-center justify-center text-current\")}\n\t>\n\t\t<Check class=\"h-4 w-4\" />\n\t</CheckboxPrimitive.Indicator>\n</CheckboxPrimitive.Root>\n"
      },
      {
        "name": "index.ts",
        "dir": "checkbox",
        "content": "export { default as Checkbox } from \"./Checkbox.svelte\";\n"
      }
    ]
  },
  {
    "component": "collapsible",
    "name": "Collapsible",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "index.ts",
        "dir": "collapsible",
        "content": "import { Collapsible as CollapsiblePrimitive } from \"radix-svelte\";\n\nexport const Collapsible = CollapsiblePrimitive.Root;\n\nexport const CollapsibleTrigger = CollapsiblePrimitive.Trigger;\n\nexport const CollapsibleContent = CollapsiblePrimitive.Content;\n"
      }
    ]
  },
  {
    "component": "dialog",
    "name": "Dialog",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "DialogContent.svelte",
        "dir": "dialog",
        "content": "<script lang=\"ts\">\n\timport { X } from \"lucide-svelte\";\n\timport { Dialog as DialogPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\timport DialogOverlay from \"./DialogOverlay.svelte\";\n\timport DialogPortal from \"./DialogPortal.svelte\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<DialogPortal>\n\t<DialogOverlay />\n\t<DialogPrimitive.Content\n\t\tclass={cn(\n\t\t\t\"fixed z-50 grid w-full gap-4 rounded-b-lg border bg-background p-6 shadow-lg animate-in data-[state=open]:fade-in-90 data-[state=open]:slide-in-from-bottom-10 sm:max-w-lg sm:rounded-lg sm:zoom-in-90 data-[state=open]:sm:slide-in-from-bottom-0\",\n\t\t\tclassName\n\t\t)}\n\t\t{...$$restProps}\n\t>\n\t\t<slot />\n\t\t<DialogPrimitive.Close\n\t\t\tclass=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\"\n\t\t>\n\t\t\t<X className=\"h-4 w-4\" />\n\t\t\t<span class=\"sr-only\">Close</span>\n\t\t</DialogPrimitive.Close>\n\t</DialogPrimitive.Content>\n</DialogPortal>\n"
      },
      {
        "name": "DialogDescription.svelte",
        "dir": "dialog",
        "content": "<script lang=\"ts\">\n\timport { Dialog as DialogPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<DialogPrimitive.Description\n\tclass={cn(\"text-sm text-muted-foreground\", className)}\n\t{...$$restProps}\n>\n\t<slot />\n</DialogPrimitive.Description>\n"
      },
      {
        "name": "DialogFooter.svelte",
        "dir": "dialog",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<div\n\tclass={cn(\n\t\t\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n\t\tclassName\n\t)}\n\t{...$$restProps}\n>\n\t<slot />\n</div>\n"
      },
      {
        "name": "DialogHeader.svelte",
        "dir": "dialog",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<div\n\tclass={cn(\"flex flex-col space-y-1.5 text-center sm:text-left\", className)}\n\t{...$$restProps}\n>\n\t<slot />\n</div>\n"
      },
      {
        "name": "DialogOverlay.svelte",
        "dir": "dialog",
        "content": "<script lang=\"ts\">\n\timport { Dialog as DialogPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<DialogPrimitive.Overlay\n\tclass={cn(\n\t\t\"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm transition-all duration-100 data-[state=closed]:animate-out data-[state=closed]:fade-out data-[state=open]:fade-in\",\n\t\tclassName\n\t)}\n\t{...$$restProps}\n/>\n"
      },
      {
        "name": "DialogPortal.svelte",
        "dir": "dialog",
        "content": "<script lang=\"ts\">\n\timport { Dialog as DialogPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<DialogPrimitive.Portal class={cn(className)} {...$$restProps}>\n\t<div\n\t\tclass=\"fixed inset-0 z-50 flex items-start justify-center sm:items-center\"\n\t>\n\t\t<slot />\n\t</div>\n</DialogPrimitive.Portal>\n"
      },
      {
        "name": "DialogTitle.svelte",
        "dir": "dialog",
        "content": "<script lang=\"ts\">\n\timport { Dialog as DialogPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<DialogPrimitive.Title\n\tclass={cn(\"text-lg font-semibold leading-none tracking-tight\", className)}\n\t{...$$restProps}\n>\n\t<slot />\n</DialogPrimitive.Title>\n"
      },
      {
        "name": "index.ts",
        "dir": "dialog",
        "content": "import { Dialog as DialogPrimitive } from \"radix-svelte\";\n\nexport const Dialog = DialogPrimitive.Root;\nexport const DialogTrigger = DialogPrimitive.Trigger;\n\nexport { default as DialogContent } from \"./DialogContent.svelte\";\nexport { default as DialogDescription } from \"./DialogDescription.svelte\";\nexport { default as DialogFooter } from \"./DialogFooter.svelte\";\nexport { default as DialogHeader } from \"./DialogHeader.svelte\";\nexport { default as DialogOverlay } from \"./DialogOverlay.svelte\";\nexport { default as DialogPortal } from \"./DialogPortal.svelte\";\nexport { default as DialogTitle } from \"./DialogTitle.svelte\";\n"
      }
    ]
  },
  {
    "component": "hover-card",
    "name": "Hover Card",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "HoverCardContent.svelte",
        "dir": "hover-card",
        "content": "<script lang=\"ts\">\n\timport type { HoverCardContentProps } from \"radix-svelte\";\n\timport { HoverCard as HoverCardPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let align: HoverCardContentProps[\"align\"] = undefined;\n\texport let sideOffset: HoverCardContentProps[\"sideOffset\"] = undefined;\n</script>\n\n<HoverCardPrimitive.Portal>\n\t<HoverCardPrimitive.Content\n\t\t{align}\n\t\t{sideOffset}\n\t\tclass={cn(\n\t\t\t\"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none animate-in zoom-in-90 mt-3\",\n\t\t\tclassName\n\t\t)}\n\t\t{...$$restProps}\n\t>\n\t\t<slot />\n\t</HoverCardPrimitive.Content>\n</HoverCardPrimitive.Portal>\n"
      },
      {
        "name": "index.ts",
        "dir": "hover-card",
        "content": "import { HoverCard as HoverCardPrimitive } from \"radix-svelte\";\n\nexport { default as HoverCardContent } from \"./HoverCardContent.svelte\";\nexport const HoverCard = HoverCardPrimitive.Root;\nexport const HoverCardTrigger = HoverCardPrimitive.Trigger;\nexport const HoverCardPortal = HoverCardPrimitive.Portal;\n"
      }
    ]
  },
  {
    "component": "input",
    "name": "Input",
    "files": [
      {
        "name": "Input.svelte",
        "dir": "input",
        "content": "<script lang=\"ts\">\n\timport type { HTMLInputAttributes } from \"svelte/elements\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\n\texport let value: HTMLInputAttributes[\"value\"] = undefined;\n\texport { className as class };\n</script>\n\n<input\n\tclass={cn(\n\t\t\"flex h-10 w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n\t\tclassName\n\t)}\n\tbind:value\n\ton:blur\n\ton:change\n\ton:click\n\ton:focus\n\ton:keydown\n\ton:keypress\n\ton:keyup\n\ton:mouseover\n\ton:mouseenter\n\ton:mouseleave\n\ton:paste\n\ton:input\n\t{...$$restProps}\n/>\n"
      },
      {
        "name": "index.ts",
        "dir": "input",
        "content": "export { default as Input } from \"./Input.svelte\";\n"
      }
    ]
  },
  {
    "component": "label",
    "name": "Label",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "Label.svelte",
        "dir": "label",
        "content": "<script lang=\"ts\">\n\timport { cva } from \"class-variance-authority\";\n\timport { Label as LabelPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tconst labelVariants = cva(\n\t\t\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n\t);\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<LabelPrimitive.Root class={cn(labelVariants(), className)} {...$$restProps}>\n\t<slot />\n</LabelPrimitive.Root>\n"
      },
      {
        "name": "index.ts",
        "dir": "label",
        "content": "export { default as Label } from \"./Label.svelte\";\n"
      }
    ]
  },
  {
    "component": "progress",
    "name": "Progress",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "Progress.svelte",
        "dir": "progress",
        "content": "<script lang=\"ts\">\n\timport type { ProgressRootProps } from \"radix-svelte\";\n\timport { Progress as ProgressPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let value: ProgressRootProps[\"value\"] = null;\n\texport let max: ProgressRootProps[\"max\"] = 100;\n</script>\n\n<ProgressPrimitive.Root\n\tclass={cn(\n\t\t\"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n\t\tclassName\n\t)}\n\t{value}\n\t{max}\n\t{...$$restProps}\n>\n\t<ProgressPrimitive.Indicator\n\t\tclass=\"h-full w-full flex-1 bg-primary transition-all\"\n\t\tstyle={`transform: translateX(-${\n\t\t\t100 - (100 * (value ?? 0)) / (max ?? 1)\n\t\t}%)`}\n\t/>\n</ProgressPrimitive.Root>\n"
      },
      {
        "name": "index.ts",
        "dir": "progress",
        "content": "export { default as Progress } from \"./Progress.svelte\";\n"
      }
    ]
  },
  {
    "component": "radio-group",
    "name": "Radio Group",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "RadioGroup.svelte",
        "dir": "radio-group",
        "content": "<script lang=\"ts\">\n\timport type { RadioGroupRootProps } from \"radix-svelte\";\n\timport { RadioGroup as RadioGroupPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let value: RadioGroupRootProps[\"value\"] = undefined;\n</script>\n\n<RadioGroupPrimitive.Root\n\tbind:value\n\tclass={cn(\"grid gap-2\", className)}\n\t{...$$restProps}\n>\n\t<slot />\n</RadioGroupPrimitive.Root>\n"
      },
      {
        "name": "RadioGroupItem.svelte",
        "dir": "radio-group",
        "content": "<script lang=\"ts\">\n\timport type { RadioGroupItemProps } from \"radix-svelte\";\n\timport { Circle } from \"lucide-svelte\";\n\timport { RadioGroup as RadioGroupPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let value: RadioGroupItemProps[\"value\"] = \"\";\n</script>\n\n<RadioGroupPrimitive.Item\n\t{value}\n\tclass={cn(\n\t\t\"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n\t\tclassName\n\t)}\n\t{...$$restProps}\n>\n\t<RadioGroupPrimitive.Indicator class=\"flex items-center justify-center\">\n\t\t<Circle class=\"h-2.5 w-2.5 fill-current text-current\" />\n\t</RadioGroupPrimitive.Indicator>\n</RadioGroupPrimitive.Item>\n"
      },
      {
        "name": "index.ts",
        "dir": "radio-group",
        "content": "export { default as RadioGroup } from \"./RadioGroup.svelte\";\nexport { default as RadioGroupItem } from \"./RadioGroupItem.svelte\";\n"
      }
    ]
  },
  {
    "component": "separator",
    "name": "Separator",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "Separator.svelte",
        "dir": "separator",
        "content": "<script lang=\"ts\">\n\timport type { SeparatorRootProps } from \"radix-svelte\";\n\timport { Separator } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\n\texport let orientation: SeparatorRootProps[\"orientation\"] = \"horizontal\";\n\texport let decorative: SeparatorRootProps[\"decorative\"] = true;\n</script>\n\n<Separator.Root\n\t{orientation}\n\t{decorative}\n\tclass={cn(\n\t\t\"shrink-0 bg-border\",\n\t\torientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n\t\tclassName\n\t)}\n\t{...$$restProps}\n/>\n"
      },
      {
        "name": "index.ts",
        "dir": "separator",
        "content": "export { default as Separator } from \"./Separator.svelte\";\n"
      }
    ]
  },
  {
    "component": "sheet",
    "name": "Sheet",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "SheetContent.svelte",
        "dir": "sheet",
        "content": "<script lang=\"ts\">\n\timport type { VariantProps } from \"class-variance-authority\";\n\timport { X } from \"lucide-svelte\";\n\timport { Dialog as SheetPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\timport { sheetVariants } from \".\";\n\timport SheetOverlay from \"./SheetOverlay.svelte\";\n\timport SheetPortal from \"./SheetPortal.svelte\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let position: VariantProps<typeof sheetVariants>[\"position\"] =\n\t\t\"right\";\n\texport let size: VariantProps<typeof sheetVariants>[\"size\"] = \"default\";\n</script>\n\n<SheetPortal {position}>\n\t<SheetOverlay />\n\t<SheetPrimitive.Content\n\t\tclass={cn(sheetVariants({ position, size }), className)}\n\t\t{...$$restProps}\n\t>\n\t\t<slot />\n\t\t<SheetPrimitive.Close\n\t\t\tclass=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\"\n\t\t>\n\t\t\t<X class=\"h-4 w-4\" />\n\t\t\t<span class=\"sr-only\">Close</span>\n\t\t</SheetPrimitive.Close>\n\t</SheetPrimitive.Content>\n</SheetPortal>\n"
      },
      {
        "name": "SheetDescription.svelte",
        "dir": "sheet",
        "content": "<script lang=\"ts\">\n\timport { Dialog as SheetPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<SheetPrimitive.Description\n\tclass={cn(\"text-sm text-muted-foreground\", className)}\n\t{...$$restProps}\n>\n\t<slot />\n</SheetPrimitive.Description>\n"
      },
      {
        "name": "SheetFooter.svelte",
        "dir": "sheet",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<div\n\tclass={cn(\n\t\t\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n\t\tclassName\n\t)}\n\t{...$$restProps}\n>\n\t<slot />\n</div>\n"
      },
      {
        "name": "SheetHeader.svelte",
        "dir": "sheet",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<div\n\tclass={cn(\"flex flex-col space-y-2 text-center sm:text-left\", className)}\n\t{...$$restProps}\n>\n\t<slot />\n</div>\n"
      },
      {
        "name": "SheetOverlay.svelte",
        "dir": "sheet",
        "content": "<script lang=\"ts\">\n\timport { Dialog as SheetPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<SheetPrimitive.Overlay\n\tclass={cn(\n\t\t\"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm transition-all duration-100 data-[state=closed]:animate-out data-[state=closed]:fade-out data-[state=open]:fade-in\",\n\t\tclassName\n\t)}\n\t{...$$restProps}\n/>\n"
      },
      {
        "name": "SheetPortal.svelte",
        "dir": "sheet",
        "content": "<script lang=\"ts\">\n\timport type { VariantProps } from \"class-variance-authority\";\n\timport { cva } from \"class-variance-authority\";\n\timport { Dialog as SheetPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tconst portalVariants = cva(\"fixed inset-0 z-50 flex\", {\n\t\tvariants: {\n\t\t\tposition: {\n\t\t\t\ttop: \"items-start\",\n\t\t\t\tbottom: \"items-end\",\n\t\t\t\tleft: \"justify-start\",\n\t\t\t\tright: \"justify-end\"\n\t\t\t}\n\t\t},\n\t\tdefaultVariants: { position: \"right\" }\n\t});\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let position: VariantProps<typeof portalVariants>[\"position\"] =\n\t\t\"right\";\n</script>\n\n<SheetPrimitive.Portal class={cn(className)} {...$$restProps}>\n\t<div class={portalVariants({ position })}>\n\t\t<slot />\n\t</div>\n</SheetPrimitive.Portal>\n"
      },
      {
        "name": "SheetTitle.svelte",
        "dir": "sheet",
        "content": "<script lang=\"ts\">\n\timport { Dialog as SheetPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<SheetPrimitive.Title\n\tclass={cn(\"text-lg font-semibold text-foreground\", className)}\n\t{...$$restProps}\n>\n\t<slot />\n</SheetPrimitive.Title>\n"
      },
      {
        "name": "index.ts",
        "dir": "sheet",
        "content": "import { cva } from \"class-variance-authority\";\nimport { Dialog as SheetPrimitive } from \"radix-svelte\";\n\nexport { default as SheetContent } from \"./SheetContent.svelte\";\nexport { default as SheetDescription } from \"./SheetDescription.svelte\";\nexport { default as SheetFooter } from \"./SheetFooter.svelte\";\nexport { default as SheetHeader } from \"./SheetHeader.svelte\";\nexport { default as SheetOverlay } from \"./SheetOverlay.svelte\";\nexport { default as SheetPortal } from \"./SheetPortal.svelte\";\nexport { default as SheetTitle } from \"./SheetTitle.svelte\";\n\nexport const Sheet = SheetPrimitive.Root;\nexport const SheetTrigger = SheetPrimitive.Trigger;\nexport const SheetClose = SheetPrimitive.Close;\n\nexport const sheetVariants = cva(\n\t\"fixed z-50 scale-100 gap-4 bg-background p-6 opacity-100 shadow-lg border\",\n\t{\n\t\tvariants: {\n\t\t\tposition: {\n\t\t\t\ttop: \"animate-in slide-in-from-top w-full duration-300\",\n\t\t\t\tbottom: \"animate-in slide-in-from-bottom w-full duration-300\",\n\t\t\t\tleft: \"animate-in slide-in-from-left h-full duration-300\",\n\t\t\t\tright: \"animate-in slide-in-from-right h-full duration-300\"\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tcontent: \"\",\n\t\t\t\tdefault: \"\",\n\t\t\t\tsm: \"\",\n\t\t\t\tlg: \"\",\n\t\t\t\txl: \"\",\n\t\t\t\tfull: \"\"\n\t\t\t}\n\t\t},\n\t\tcompoundVariants: [\n\t\t\t{\n\t\t\t\tposition: [\"top\", \"bottom\"],\n\t\t\t\tsize: \"content\",\n\t\t\t\tclass: \"max-h-screen\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: [\"top\", \"bottom\"],\n\t\t\t\tsize: \"default\",\n\t\t\t\tclass: \"h-1/3\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: [\"top\", \"bottom\"],\n\t\t\t\tsize: \"sm\",\n\t\t\t\tclass: \"h-1/4\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: [\"top\", \"bottom\"],\n\t\t\t\tsize: \"lg\",\n\t\t\t\tclass: \"h-1/2\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: [\"top\", \"bottom\"],\n\t\t\t\tsize: \"xl\",\n\t\t\t\tclass: \"h-5/6\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: [\"top\", \"bottom\"],\n\t\t\t\tsize: \"full\",\n\t\t\t\tclass: \"h-screen\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: [\"right\", \"left\"],\n\t\t\t\tsize: \"content\",\n\t\t\t\tclass: \"max-w-screen\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: [\"right\", \"left\"],\n\t\t\t\tsize: \"default\",\n\t\t\t\tclass: \"w-1/3\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: [\"right\", \"left\"],\n\t\t\t\tsize: \"sm\",\n\t\t\t\tclass: \"w-1/4\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: [\"right\", \"left\"],\n\t\t\t\tsize: \"lg\",\n\t\t\t\tclass: \"w-1/2\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: [\"right\", \"left\"],\n\t\t\t\tsize: \"xl\",\n\t\t\t\tclass: \"w-5/6\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: [\"right\", \"left\"],\n\t\t\t\tsize: \"full\",\n\t\t\t\tclass: \"w-screen\"\n\t\t\t}\n\t\t],\n\t\tdefaultVariants: {\n\t\t\tposition: \"right\",\n\t\t\tsize: \"default\"\n\t\t}\n\t}\n);\n"
      }
    ]
  },
  {
    "component": "skeleton",
    "name": "Skeleton",
    "files": [
      {
        "name": "Skeleton.svelte",
        "dir": "skeleton",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<div\n\tclass={cn(\"animate-pulse rounded-md bg-muted\", className)}\n\t{...$$restProps}\n/>\n"
      },
      {
        "name": "index.ts",
        "dir": "skeleton",
        "content": "export { default as Skeleton } from \"./Skeleton.svelte\";\n"
      }
    ]
  },
  {
    "component": "slider",
    "name": "Slider",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "Slider.svelte",
        "dir": "slider",
        "content": "<script lang=\"ts\">\n\timport type { SliderRootProps } from \"radix-svelte\";\n\timport { Slider as SliderPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let value: SliderRootProps[\"value\"] = 0;\n</script>\n\n<SliderPrimitive.Root\n\tbind:value\n\tclass={cn(\n\t\t\"relative flex w-full touch-none select-none items-center\",\n\t\tclassName\n\t)}\n\t{...$$restProps}\n>\n\t<SliderPrimitive.Track\n\t\tclass=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\"\n\t>\n\t\t<SliderPrimitive.Range class=\"absolute h-full bg-primary\" />\n\t</SliderPrimitive.Track>\n\t<SliderPrimitive.Thumb\n\t\tclass=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\"\n\t/>\n</SliderPrimitive.Root>\n"
      },
      {
        "name": "index.ts",
        "dir": "slider",
        "content": "export { default as Slider } from \"./Slider.svelte\";\n"
      }
    ]
  },
  {
    "component": "switch",
    "name": "Switch",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "Switch.svelte",
        "dir": "switch",
        "content": "<script lang=\"ts\">\n\timport type { SwitchRootProps } from \"radix-svelte\";\n\timport { Switch } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let rootChecked: SwitchRootProps[\"checked\"] = undefined;\n\texport let rootRequired: SwitchRootProps[\"required\"] = undefined;\n\texport let rootDisabled: SwitchRootProps[\"disabled\"] = undefined;\n\texport let rootName: SwitchRootProps[\"name\"] = undefined;\n\texport let rootValue: SwitchRootProps[\"value\"] = undefined;\n</script>\n\n<Switch.Root\n\tclass={cn(\n\t\t\"peer inline-flex h-[24px] w-[44px] shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n\t\tclassName\n\t)}\n\t{...$$restProps}\n\tbind:checked={rootChecked}\n\tbind:required={rootRequired}\n\tbind:disabled={rootDisabled}\n\tbind:name={rootName}\n\tbind:value={rootValue}\n>\n\t<Switch.Thumb\n\t\tclass={cn(\n\t\t\t\"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n\t\t)}\n\t/>\n</Switch.Root>\n"
      },
      {
        "name": "index.ts",
        "dir": "switch",
        "content": "export { default as Switch } from \"./Switch.svelte\";\n"
      }
    ]
  },
  {
    "component": "table",
    "name": "Table",
    "files": [
      {
        "name": "Table.svelte",
        "dir": "table",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<div class=\"w-full overflow-auto\">\n\t<table\n\t\tclass={cn(\"w-full caption-bottom text-sm\", className)}\n\t\t{...$$restProps}\n\t>\n\t\t<slot />\n\t</table>\n</div>\n"
      },
      {
        "name": "TableBody.svelte",
        "dir": "table",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<tbody class={cn(\"[&_tr:last-child]:border-0\", className)} {...$$restProps}>\n\t<slot />\n</tbody>\n"
      },
      {
        "name": "TableCaption.svelte",
        "dir": "table",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<caption\n\tclass={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n\t{...$$restProps}\n>\n\t<slot />\n</caption>\n"
      },
      {
        "name": "TableCell.svelte",
        "dir": "table",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<td\n\tclass={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n\t{...$$restProps}\n>\n\t<slot />\n</td>\n"
      },
      {
        "name": "TableFooter.svelte",
        "dir": "table",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<tfoot\n\tclass={cn(\"bg-primary font-medium text-primary-foreground\", className)}\n\t{...$$restProps}\n>\n\t<slot />\n</tfoot>\n"
      },
      {
        "name": "TableHead.svelte",
        "dir": "table",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<th\n\tclass={cn(\n\t\t\"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n\t\tclassName\n\t)}\n\t{...$$restProps}\n>\n\t<slot />\n</th>\n"
      },
      {
        "name": "TableHeader.svelte",
        "dir": "table",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<thead class={cn(\"[&_tr]:border-b\", className)} {...$$restProps}>\n\t<slot />\n</thead>\n"
      },
      {
        "name": "TableRow.svelte",
        "dir": "table",
        "content": "<script lang=\"ts\">\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<tr\n\tclass={cn(\n\t\t\"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n\t\tclassName\n\t)}\n\t{...$$restProps}\n>\n\t<slot />\n</tr>\n"
      },
      {
        "name": "index.ts",
        "dir": "table",
        "content": "export { default as Table } from \"./Table.svelte\";\nexport { default as TableBody } from \"./TableBody.svelte\";\nexport { default as TableCaption } from \"./TableCaption.svelte\";\nexport { default as TableCell } from \"./TableCell.svelte\";\nexport { default as TableFooter } from \"./TableFooter.svelte\";\nexport { default as TableHead } from \"./TableHead.svelte\";\nexport { default as TableHeader } from \"./TableHeader.svelte\";\nexport { default as TableRow } from \"./TableRow.svelte\";\n"
      }
    ]
  },
  {
    "component": "tabs",
    "name": "Tabs",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "TabsContent.svelte",
        "dir": "tabs",
        "content": "<script lang=\"ts\">\n\timport type { TabsContentProps } from \"radix-svelte\";\n\timport { Tabs as TabsPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let value: TabsContentProps[\"value\"];\n</script>\n\n<TabsPrimitive.Content\n\tclass={cn(\n\t\t\"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n\t\tclassName\n\t)}\n\t{value}\n\t{...$$restProps}\n>\n\t<slot />\n</TabsPrimitive.Content>\n"
      },
      {
        "name": "TabsList.svelte",
        "dir": "tabs",
        "content": "<script lang=\"ts\">\n\timport { Tabs as TabsPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<TabsPrimitive.List\n\tclass={cn(\n\t\t\"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n\t\tclassName\n\t)}\n\t{...$$restProps}\n>\n\t<slot />\n</TabsPrimitive.List>\n"
      },
      {
        "name": "TabsTrigger.svelte",
        "dir": "tabs",
        "content": "<script lang=\"ts\">\n\timport type { TabsTriggerProps } from \"radix-svelte\";\n\timport { Tabs as TabsPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let value: TabsTriggerProps[\"value\"];\n</script>\n\n<TabsPrimitive.Trigger\n\tclass={cn(\n\t\t\"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n\t\tclassName\n\t)}\n\t{value}\n\t{...$$restProps}\n>\n\t<slot />\n</TabsPrimitive.Trigger>\n"
      },
      {
        "name": "index.ts",
        "dir": "tabs",
        "content": "import { Tabs as TabsPrimitive } from \"radix-svelte\";\n\nexport { default as TabsContent } from \"./TabsContent.svelte\";\nexport { default as TabsList } from \"./TabsList.svelte\";\nexport { default as TabsTrigger } from \"./TabsTrigger.svelte\";\n\nexport const Tabs = TabsPrimitive.Root;\n"
      }
    ]
  },
  {
    "component": "textarea",
    "name": "Textarea",
    "files": [
      {
        "name": "Textarea.svelte",
        "dir": "textarea",
        "content": "<script lang=\"ts\">\n\timport type { HTMLTextareaAttributes } from \"svelte/elements\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\n\texport let value: HTMLTextareaAttributes[\"value\"] = undefined;\n\texport { className as class };\n</script>\n\n<textarea\n\tclass={cn(\n\t\t\"flex h-20 w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n\t\tclassName\n\t)}\n\tbind:value\n\ton:blur\n\ton:change\n\ton:click\n\ton:focus\n\ton:keydown\n\ton:keypress\n\ton:keyup\n\ton:mouseover\n\ton:mouseenter\n\ton:mouseleave\n\ton:paste\n\ton:input\n\t{...$$restProps}\n/>\n"
      },
      {
        "name": "index.ts",
        "dir": "textarea",
        "content": "export { default as Textarea } from \"./Textarea.svelte\";\n"
      }
    ]
  },
  {
    "component": "toggle",
    "name": "Toggle",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "Toggle.svelte",
        "dir": "toggle",
        "content": "<script lang=\"ts\">\n\timport type { VariantProps } from \"class-variance-authority\";\n\timport type { ToggleRootProps } from \"radix-svelte\";\n\timport { cva } from \"class-variance-authority\";\n\timport { Toggle as TogglePrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tconst toggleVariants = cva(\n\t\t\"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors data-[state=on]:bg-accent data-[state=on]:text-accent-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 ring-offset-background hover:bg-muted hover:text-muted-foreground\",\n\t\t{\n\t\t\tvariants: {\n\t\t\t\tvariant: {\n\t\t\t\t\tdefault: \"bg-transparent\",\n\t\t\t\t\toutline:\n\t\t\t\t\t\t\"bg-transparent border border-input hover:bg-accent hover:text-accent-foreground\"\n\t\t\t\t},\n\t\t\t\tsize: {\n\t\t\t\t\tdefault: \"h-10 px-3\",\n\t\t\t\t\tsm: \"h-9 px-2.5\",\n\t\t\t\t\tlg: \"h-11 px-5\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefaultVariants: {\n\t\t\t\tvariant: \"default\",\n\t\t\t\tsize: \"default\"\n\t\t\t}\n\t\t}\n\t);\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let variant: VariantProps<typeof toggleVariants>[\"variant\"] =\n\t\t\"default\";\n\texport let size: VariantProps<typeof toggleVariants>[\"size\"] = \"default\";\n\texport let pressed: ToggleRootProps[\"disabled\"] = false;\n\texport let disabled: ToggleRootProps[\"disabled\"] = false;\n</script>\n\n<TogglePrimitive.Root\n\tclass={cn(toggleVariants({ variant, size, className }))}\n\tbind:pressed\n\tbind:disabled\n\t{...$$restProps}\n>\n\t<slot />\n</TogglePrimitive.Root>\n"
      },
      {
        "name": "index.ts",
        "dir": "toggle",
        "content": "export { default as Toggle } from \"./Toggle.svelte\";\n"
      }
    ]
  },
  {
    "component": "tooltip",
    "name": "Tooltip",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "TooltipContent.svelte",
        "dir": "tooltip",
        "content": "<script lang=\"ts\">\n\timport type { TooltipContentProps } from \"radix-svelte/index\";\n\timport { Tooltip as TooltipPrimitive } from \"radix-svelte\";\n\timport { cn } from \"$lib/utils\";\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let sideOffset: TooltipContentProps[\"sideOffset\"] = 4;\n</script>\n\n<TooltipPrimitive.Portal>\n\t<TooltipPrimitive.Content\n\t\t{sideOffset}\n\t\tclass={cn(\n\t\t\t\"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-50 data-[side=bottom]:slide-in-from-top-1 data-[side=left]:slide-in-from-right-1 data-[side=right]:slide-in-from-left-1 data-[side=top]:slide-in-from-bottom-1\",\n\t\t\tclassName\n\t\t)}\n\t\t{...$$restProps}\n\t>\n\t\t<slot />\n\t</TooltipPrimitive.Content>\n</TooltipPrimitive.Portal>\n"
      },
      {
        "name": "index.ts",
        "dir": "tooltip",
        "content": "import { Tooltip as TooltipPrimitive } from \"radix-svelte\";\n\nexport { default as TooltipContent } from \"./TooltipContent.svelte\";\nexport const TooltipProvider = TooltipPrimitive.Provider;\nexport const Tooltip = TooltipPrimitive.Root;\nexport const TooltipTrigger = TooltipPrimitive.Trigger;\n"
      }
    ]
  }
]